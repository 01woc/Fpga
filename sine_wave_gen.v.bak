module sine_wave_gen (
    input clk,
    input reset,
    input [9:0] frequency,   // Tần số đầu vào
    output reg [23:0] sine_wave // Sóng sin đầu ra 24 bit
);

    reg [31:0] phase_acc; // Thanh ghi pha
    reg [23:0] sin_lut [0:1023]; // LUT chứa 1024 giá trị 24 bit

    // Khởi tạo LUT từ file
    initial begin
        $readmemh("sine_lut_24bit.mem", sin_lut); // Nạp dữ liệu LUT từ file hex
    end

    // Cập nhật giá trị pha
    always @(posedge clk or posedge reset) begin
        if (reset)
            phase_acc <= 0;
        else
            phase_acc <= phase_acc + {22'b0, frequency}; // Tăng pha theo tần số
    end

    // Tính địa chỉ LUT
    wire [9:0] lut_addr;
    assign lut_addr = phase_acc[31:22]; // Sử dụng 10 bit cao nhất của pha

    // Đọc giá trị sóng từ LUT
    always @(posedge clk) begin
        sine_wave <= sin_lut[lut_addr];
    end

endmodule